export const hoistingFunc = 'https://frontend-stuff.com/blog/hoisting/'


// По умолчанию в JavaScript все объявления перемещаются в верхнюю часть текущей области видимости (в верхнюю часть текущего скрипта или текущей функции). JavaScript поднимает только объявления, но не инициализации.

// Поднятие функций
// Одним из преимуществ JavaScript является помещение объявления функций в память, перед выполнением любого сегмента кода. Объявления функций поднимаются, но они идут на самый верх, поэтому они будут находиться над всеми объявлениями переменных. Это позволяет нам использовать функцию до того, как мы объявим её в своем коде. Например:

//// Function Declaration обрабатываются перед выполнением блока кода. Они видны во всём блоке.
// Функции, объявленные при помощи Function Expression, создаются, только когда поток выполнения достигает их.



function printName(name) {
  console.log("Hello, my name is " + name);
}

printName("Alex");
// Теперь, давайте посмотрим, что произойдёт, когда мы вызовем функцию printName, прежде чем напишем её:

printName("Alex");

function printName(name) {
  console.log("Hello, my name is " + name);
}
// Несмотря на то, что мы вызвали функцию printName, перед тем, как написать её, код всё ещё работает. Это происходит из-за того, как контекстное выполнение работает в JavaScript.

