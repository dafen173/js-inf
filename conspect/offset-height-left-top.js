export const offsetHeightLeftTop = ''


//https://learn.javascript.ru/size-and-scroll#offsetwidth-height

// offsetParent, offsetLeft/Top
// Эти свойства редко используются, но так как они являются «самыми внешними» метриками, мы начнём с них.

// В свойстве offsetParent находится предок элемента, который используется внутри браузера 
//для вычисления координат при рендеринге.

// То есть, ближайший предок, который удовлетворяет следующим условиям:
// Является CSS-позиционированным (CSS-свойство position равно absolute, relative, fixed или sticky),
// или <td>, <th>, <table>,
// или <body>.

// Свойства offsetLeft/offsetTop содержат координаты x/y относительно верхнего левого угла offsetParent.

// В примере ниже внутренний <div> имеет элемент <main> в качестве offsetParent, а свойства 
//offsetLeft/offsetTop являются сдвигами относительно верхнего левого угла (180):

{/* <main style="position: relative" id="main">
  <article>
    <div id="example" style="position: absolute; left: 180px; top: 180px">...</div>
  </article>
</main>
<script>
  alert(example.offsetParent.id); // main
  alert(example.offsetLeft); // 180 (обратите внимание: число, а не строка "180px")
  alert(example.offsetTop); // 180
</script> */}

// Существует несколько ситуаций, когда offsetParent равно null:
// Для скрытых элементов (с CSS-свойством display:none или когда его нет в документе).
// Для элементов <body> и <html>.
// Для элементов с position:fixed.


// offsetWidth/Height
// Эти два свойства – самые простые. Они содержат «внешнюю» ширину/высоту элемента, 
//то есть его полный размер, включая рамки.

// Для нашего элемента:
// offsetWidth = 390 – внешняя ширина блока, её можно получить сложением CSS-ширины (300px), 
//внутренних отступов (2 * 20px) и рамок (2 * 25px).
// offsetHeight = 290 – внешняя высота блока.

// Метрики для не показываемых элементов равны нулю.
// Координаты и размеры в JavaScript устанавливаются только для видимых элементов.

// Если элемент (или любой его родитель) имеет display:none или отсутствует в документе, 
//то все его метрики равны нулю (или null, если это offsetParent).

// Например, свойство offsetParent равно null, а offsetWidth и offsetHeight равны 0, 
//когда мы создали элемент, но ещё не вставили его в документ, или если у 
//элемента (или у его родителя) display:none.

// Мы можем использовать это, чтобы делать проверку на видимость:

// function isHidden(elem) {
//   return !elem.offsetWidth && !elem.offsetHeight;
// }
// Заметим, что функция isHidden также вернёт true для элементов, которые в принципе показываются, 
//но их размеры равны нулю (например, пустые <div>).

// Итого
// У элементов есть следующие геометрические свойства (метрики):
// offsetParent – ближайший CSS-позиционированный родитель или ближайший td, th, table, body.
// offsetLeft/offsetTop – позиция в пикселях верхнего левого угла относительно offsetParent.
// offsetWidth/offsetHeight – «внешняя» ширина/высота элемента, включая рамки.
// clientLeft/clientTop – расстояние от верхнего левого внешнего угла до внутренного. 
//Для операционных систем с ориентацией слева-направо эти свойства равны ширинам левой/верхней рамки. 
//Если язык ОС таков, что ориентация справа налево, так что вертикальная полоса прокрутки находится не справа, 
//а слева, то clientLeft включает в своё значение её ширину.
// clientWidth/clientHeight – ширина/высота содержимого вместе с внутренними отступами padding, 
//но без полосы прокрутки.
// scrollWidth/scrollHeight – ширины/высота содержимого, аналогично clientWidth/Height, 
//но учитывают прокрученную, невидимую область элемента.
// scrollLeft/scrollTop – ширина/высота прокрученной сверху части элемента, считается от верхнего левого угла.

// Все свойства доступны только для чтения, кроме scrollLeft/scrollTop, изменение которых заставляет 
//браузер прокручивать элемент.




