export const arrMethods = 'https://maxello.gitbooks.io/js-note/content/06_functions_continuation/metodi_massivov.html'


//https://learn.javascript.ru/array-methods

// Шпаргалка по методам массива:

// Для добавления/удаления элементов:
// push (...items) – добавляет элементы в конец,
// pop() – извлекает элемент с конца,
// shift() – извлекает элемент с начала,
// unshift(...items) – добавляет элементы в начало.
// splice(pos, deleteCount, ...items) – начиная с индекса pos, удаляет deleteCount элементов и вставляет items.
// slice(start, end) – создаёт новый массив, копируя в него элементы с позиции start до end (не включая end).
// concat(...items) – возвращает новый массив: копирует все члены текущего массива и добавляет к нему items. 
//Если какой-то из items является массивом, тогда берутся его элементы.

// Для поиска среди элементов:
// indexOf/lastIndexOf(item, pos) – ищет item, начиная с позиции pos, и возвращает его индекс или -1, 
//если ничего не найдено.
// includes(value) – возвращает true, если в массиве имеется элемент value, в противном случае false.
// find/filter(func) – фильтрует элементы через функцию и отдаёт первое/все значения, 
//при прохождении которых через функцию возвращается true.
// findIndex похож на find, но возвращает индекс вместо значения.

// Для перебора элементов:
// forEach(func) – вызывает func для каждого элемента. Ничего не возвращает.

// Для преобразования массива:
// map(func) – создаёт новый массив из результатов вызова func для каждого элемента.
// sort(func) – сортирует массив «на месте», а потом возвращает его.
let arr = [ 1, 22, 15 ];
arr.sort(function(a, b) { return b - a; });
alert(arr);  // 22, 15, 1
// reverse() – «на месте» меняет порядок следования элементов на противоположный и возвращает изменённый массив.
// split/join – преобразует строку в массив и обратно.
// reduce(func, initial) – вычисляет одно значение на основе всего массива, 
//вызывая func для каждого элемента и передавая промежуточный результат между вызовами.

// Дополнительно:
// Array.isArray(arr) проверяет, является ли arr массивом.

// Обратите внимание, что методы sort, reverse и splice изменяют исходный массив.

// Изученных нами методов достаточно в 99% случаев, но существуют и другие.

// arr.some(fn)/arr.every(fn) проверяет массив.
// Функция fn вызывается для каждого элемента массива аналогично map. 
//Если какие-либо/все результаты вызовов являются true, то метод возвращает true, иначе false.

// arr.fill(value, start, end) – заполняет массив повторяющимися value, начиная с индекса start до end.

// arr.copyWithin(target, start, end) – копирует свои элементы, начиная со start и заканчивая end, 
//в собственную позицию target (перезаписывает существующие).



// Метод indexOf( )
// Источник: https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf

// Метод indexOf() возвращает первый индекс, по которому данный элемент может быть найден в массиве или –1, если такого индекса нет.
// Синтаксис
// arr.indexOf(searchElement[, fromIndex = 0])
// Параметры
// searchElement Искомый элемент в массиве.
// fromIndex Индекс, с которого начинать поиск. Если индекс больше или равен длины массива, возвращается -1, что означает, что массив даже не просматривается. Если индекс является отрицательным числом, он трактуется как смещение с конца массива. Обратите внимание: если индекс отрицателен, массив всё равно просматривается от начала к концу. Если рассчитанный индекс оказывается меньше 0, поиск ведётся по всему массиву. Значение по умолчанию равно 0, что означает, что просматривается весь массив.
// Описание
// Метод indexOf сравнивает искомый элемент searchElement с элементами в массиве, используя строгое сравнение (тот же метод используется оператором === , тройное равно).

// Примеры
// Пример: использование indexOf
// В следующем примере indexOf используется для поиска значений в массиве.

var array = [2, 5, 9];
var index = array.indexOf(2);
// index равен 0
index = array.indexOf(7);
// index равен -1
index = array.indexOf(9, 2);
// index равен 2
index = array.indexOf(2, -1);
// index равен -1
index = array.indexOf(2, -3);
// index равен 0


