export const destructuring = ''


//https://learn.javascript.ru/destructuring-assignment
//В JavaScript есть две чаще всего используемые структуры данных 
//– это Object и Array.
//Объекты позволяют нам создавать одну сущность, которая хранит 
//элементы данных по ключам, а массивы – хранить упорядоченные 
//коллекции данных.
//Но когда мы передаём их в функцию, то ей может понадобиться 
//не объект/массив целиком, а элементы по отдельности.
//Деструктурирующее присваивание – это специальный синтаксис, 
//который позволяет нам «распаковать» массивы или объекты 
//в кучу переменных, так как иногда они более удобны. 
//Деструктуризация также прекрасно работает со сложными функциями, 
//которые имеют много параметров, значений по умолчанию и 
//так далее.

//Пример деструктуризации массива:
// у нас есть массив с именем и фамилией
let arr = ["Ilya", "Kantor"]
// деструктурирующее присваивание
// записывает firstName=arr[0], surname=arr[1]
let [firstName, surname] = arr;
alert(firstName); // Ilya
alert(surname);  // Kantor

//Если мы хотим не просто получить первые значения, 
//но и собрать все остальные, то мы можем добавить ещё один 
//параметр, который получает остальные значения, используя 
//оператор «остаточные параметры» – троеточие ("..."):

let [name1, name2, ...rest] = ["Julius", "Caesar", "Consul", "of the Roman Republic"];

alert(name1); // Julius
alert(name2); // Caesar

// Обратите внимание, что `rest` является массивом.
alert(rest[0]); // Consul
alert(rest[1]); // of the Roman Republic
alert(rest.length); // 2



//https://medium.com/@stasonmars/%D0%B4%D0%B5%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%82%D1%83%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F-%D0%B2-es6-%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5-%D1%80%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D0%BE-b865bb71f376
// Что такое деструктуризация?
// Деструктуризация просто подразумевает разбивку сложной 
//структуры на простые части. В JavaScript, таковая сложная 
//структура обычно является объектом или массивом. 
//Используя синтаксис деструктуризации, вы можете выделить 
//маленькие фрагменты из массивов или объектов. Такой синтаксис 
//может быть использован для объявления переменных или их 
//назначения. Вы также можете управлять вложенными структурами, 
//используя уже синтаксис вложенной деструктуризации.




