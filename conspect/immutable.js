export const immutable = 'https://frontend-stuff.com/blog/javascript-cheatsheet/#mutable-vs-immutable-%D0%B2-js'


//https://frontend-stuff.com/blog/javascript-cheatsheet/#mutable-vs-immutable-%D0%B2-js
// Mutable vs Immutable в JS
// Разница между неизменяемым и изменяемым типом данных: если тип является изменяемым, при изменении значения ссылочной переменной это также повлияет на значение исходной ссылочной переменной;
// Примитивные типы данных, такие как number, string и boolean, неизменяемы - невозможно изменить значения этих типов путем изменения ссылки - ты можешь комбинировать их и получать из них новые значения, но когда ты присваиваешь конкретное значение, это значение будет всегда оставаться прежним; ты можешь указать имя переменной на новое значение, но предыдущее значение по-прежнему сохраняется в памяти;
// Mutable - это тип, которую можно изменить по ссылке - в JS изменяемыми являются только objects и arrays. Ты можешь изменять их свойства. Например: заставляя одно значение объекта иметь разное содержимое в разное время.



//https://nuancesprog.ru/p/3348/
// 1. Иммутабельность (неизменяемый объект)
// Иммутабельность — это то же самое, что и неизменяемый объект. Если состояние является immutable — это означает, что оно не может быть изменено после создания.
// В JavaScript, const — это способ частично объявить immutable (неизменяемое) значение. Вы по-прежнему сможете изменить значение const, но для этого потребуется больше усилий, чем для let и var.
//mutable структуры данных могут быть изменены после создания, а immutable - нет. Мутации могут рассматриваться как побочные эффекты в наших приложениях.






