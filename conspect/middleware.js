export const middleware = 'https://codernet.ru/articles/drugoe/chto_takoe_middleware_ili_funkczii_svyazuyushhego_programmnogo_obespecheniya/'


// Что такое Middleware или функции связующего программного обеспечения
// 29.06.2021
// Lorem ipsum dolor
// В процессе изучения и работы в программировании рано или поздно все встречаются с таким понятием, 
//как «middleware-компонент». Естественно, возникает вопрос: «Что такое middleware?».

// Мiddleware — это функция промежуточного или связующего программного обеспечения, а по сути, 
//это небольшой «кусок» скрипта целого программного продукта, который отвечает за обработку различных 
//запросов и ответов.

// Что такое middleware?
// В одном программном продукте может быть несколько middleware-компонентов, отвечающих за
// определенную функцию приложения. К примеру, middleware может быть реализован в программе 
//для следующих мероприятий:

// провести аутентификацию пользователей приложения;
// для обработки возникающих багов;
// для обслуживания каких-либо файлов, допустим, CSS или JavaScript;
// для обработки графических изображений;
// и др.

// Применение middleware в разработке необходимо для выполнения 2-х основных функций:
// Облегчить доступ приложения к ресурсам. Это полезная функция при программировании 
//информационных систем, так как позволяет концентрировать усилия программистов на разработке 
//общей логики приложения, а не на реализации доступа к ресурсам.

// Ускорить процесс взаимодействия. Мiddleware специально создаются, чтобы ускорить взаимодействие 
//с приложением, а это значит, что они выполняют эту функцию эффективнее, чем другие решения.
 
// Как классифицируются middleware?
// Условно классификация middleware разделяет их на 2 большие группы:

// Мiddleware для создания взаимодействия между активным приложением и базой данных. 
//Это наиболее популярная и известная группа. Ее основная деятельность — это предоставление API 
//для доступа к разным видам БД. На сегодняшний день редко какое приложение обходится 
//без собственной базы данных.

// Middleware для создания взаимодействия между активными приложениями (другие работающие приложения). 
//Очень часто одно приложение работает и «собирает» данные с других приложений или ресурсов. 
//Для качественного взаимодействия между совместно работающими приложениями и применяют эту группу middleware.
 
// Где применяются middleware?
// Термин «middleware» очень плотно вошел в лексикон опытных разработчиков, поэтому вам обязательно 
//нужно знать, что это такое, чтобы быть на уровне. Применение middleware почему-то зависит от опыта 
//самого разработчика. Более опытные применяют middleware-компоненты во всех своих приложениях. 
//Менее опытные разработчики обходятся без них.

// Но с другой стороны, middleware-компоненты просто необходимо применять, когда нужно упростить 
//создание распределительной системы, чтобы больше концентрироваться на бизнес-логике своей разработки, 
//а не на отладке взаимодействия между приложениями и ресурсами.

// Ну а вообще, middleware очень часто применяются при работе с базами данных различного типа и при 
//наладке взаимодействия между разными приложениями, но при этом нужно применять соответствующие middleware.
 
// На что способен middleware?
// Компонент middleware при более детальном рассмотрении может следующее:

// контролировать входящие запросы и исходящие ответы баз данных;
// передавать необходимый запрос другому middleware в рамках одного программного продукта;
// производить небольшую логическую обработку и только потом передавать зарос другому компоненту middleware;
// остановить конвейер запросов;
// быть выполненным в строгой очередности, то есть строго в порядке добавления.
 
// Заключение
// Что такое middleware — вроде ясно. Мiddleware — это еще один вспомогательный инструмент, 
//который призван облегчить разработку приложений. Пользоваться им или нет — на ваше усмотрение.






