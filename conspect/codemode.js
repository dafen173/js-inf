export const codemod = ''


//https://habr.com/ru/company/badoo/blog/332402/
// Сопровождение кодовой базы может обернуться головной болью для любого разработчика, особенно когда дело касается JavaScript. В условиях постоянно меняющихся стандартов, синтаксиса и критических изменений сторонних пакетов поддерживать такой код очень непросто.
// За последние годы JavaScript изменился до неузнаваемости. Развитие этого языка привело к тому, что была изменена даже простейшая задача по объявлению переменных. В ES6 появились let и const, стрелочные функции и множество других новшеств, каждое из которых приносит пользу разработчикам.
// При создании и поддержке в рабочем состоянии кода, призванного выдерживать проверку временем, растёт нагрузка на разработчиков. Из этого поста вы узнаете, как можно автоматизировать задачи по широкомасштабному рефакторингу кода с использованием Codemod-скриптов и инструмента jscodeshift, что позволит вам, например, легко обновлять свой код для использования новых возможностей языка.

// Codemod – это инструмент, разработанный Facebook для 
//рефакторинга больших кодовых баз. Он позволяет разработчику 
//реорганизовать большой объём кода за небольшой промежуток 
//времени. Для небольших задач по рефакторингу вроде 
//переименования класса или переменной разработчик 
//использует IDE, такие изменения обычно затрагивают только 
//один файл. Следующим инструментом для рефакторинга является 
//глобальный поиск и замена. Часто он может работать с 
//использованием сложных регулярных выражений. Но такой метод 
//подходит не для всех случаев.

// Codemod написан на Python, он принимает ряд параметров, 
//включая выражения для поиска и замены.
// codemod -m -d /code/myAwesomeSite/pages --extensions php,html \
//     '<font *color="?(.*?)"?>(.*?)</font>' \
//     '<span style="color: \1;">\2</span>'

// В приведённом примере мы заменяем <font> на <span> с 
//использованием встроенного стиля для указания цвета. 
//Первые два параметра – это флаги, указывающие на 
//необходимость поиска нескольких совпадений (-m), и каталог 
//для начала обработки (-d /code/myAwesomeSite/pages). 
//Мы также можем ограничить обрабатываемые расширения 
//(-extensions php, html). Затем мы предоставляем выражения 
//для поиска и замены. Если выражение для замены не указано, 
//будет предложено ввести его во время выполнения. Инструмент 
//работает нормально, но он очень похож на существующие 
//инструменты для поиска и замены с использованием регулярных 
//выражений.


