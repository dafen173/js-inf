export const reactKeys = ''


//https://github.com/harryheman/React-Total/blob/main/md/questions_react.md#18
// Что такое проп key и в чем заключаются преимущества его использования?
// key - это специальный строковый атрибут, который вы должны использовать при создании списков элементов.
// Проп key помогает React определять, какие элементы подверглись изменениям, были добавлены или удалены.

// Чаще всего, в качестве ключа мы используем идентификаторы:

// const todoItems = todos.map((todo) =>
//   <li key={todo.id}>
//     {todo.text}
//   </li>
// )
// При отсутствии ID, в качестве ключа можно использовать индекс элемента:

// const todoItems = todos.map((todo, index) =>
//   <li key={index}>
//     {todo.text}
//   </li>
// )
// Обратите внимание:

// Использовать индексы в качестве ключей не рекомендуется, если порядок расположения элементов 
//может измениться. Это может негативно сказаться на производительности, а также привести к проблемам 
//с состоянием компонента
// При извлечении элемента списка в качестве самостоятельного компонента применяйте ключи к 
//этим компонентам, а не к тегу li
// При отсутствии пропа key в консоль будет выведено соответствующее предупреждение




//https://github.com/harryheman/React-Total/blob/main/md/questions_react-v2.md#%D0%B229-%D0%B4%D0%BB%D1%8F-%D1%87%D0%B5%D0%B3%D0%BE-%D0%BD%D1%83%D0%B6%D0%BD%D1%8B-%D0%BA%D0%BB%D1%8E%D1%87%D0%B8-keys
// Для чего нужны ключи (keys)?
// Ключи помогают React определять, какие элементы подверглись изменениям, были добавлены или удалены. 
//Проп key должен быть присвоен каждому элементу массива для обеспечения его стабильности.

// function NumberList(props) {
//   const numbers = props.numbers
//   const listItems = numbers.map((number) =>
//     <li key={number.toString()}>
//       {number}
//     </li>
//   )
//   return (
//     <ul>{listItems}</ul>
//   )
// }

// const numbers = [1, 2, 3, 4, 5]
// ReactDOM.render(
//   <NumberList numbers={numbers} />,
//   document.getElementById('root')
// )
// Случаи безопасного использование индексов элементов в качестве ключей

// Список является статичным, т.е. никогда не меняется
// Порядок расположения элементов также не меняется
// Список не будет фильтроваться (добавление/удаление элементов из списка)
// Элементы не имеют идентификаторов или других уникальных значений
// Обратите внимание: использование индексов в качестве ключей может привести к непредсказуемому поведению компонента.





