export const hooks = ''



// React Hooks позволяют вам сохранять ваши функциональные компоненты как функции и привязывать состояние к специфическим функциям React. Вот и все. Такой простой, но такой мощный. 


//https://frontend-stuff.com/blog/react-components-hooks-vs-classes/
// С помощью хуков написание кода намного проще, и я считаю, что чтение функциональных компонентов с 
//помощью хуков требует меньшего переключения контекста, поскольку ты не прыгаешь по файлу, 
//чтобы определить, в каком методе жизненного цикла, по твоему мнению, что-то произошло.
// Это главное преимущество переписывания на хуки - опыт разработчика улучшается, 
//поскольку требуется меньше времени, чтобы понять, что делает каждый компонент.
// Главный недостаток - время; время, потраченное на переписывание, - это время, 
//которое ты мог бы потратить на создание новых функций или написание интеграционных тестов.
// Что дальше делать
// Я рекомендую следующий подход, который хорошо работает. Весь новый код должен быть 
//написан как функциональные компоненты с хуками. Существующий код следует переписывать только в том случае, если он часто изменяется (например, если ты исправляешь ошибку или добавляешь функциональность, найди время, чтобы заменить компонент на хуки).







